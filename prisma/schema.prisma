// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Users {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  password     String
  mobileNumber String?
  emailAddress String?
  deptId       Int?
  desigId      Int?
  roleId       Int?
  orgId        Int?
  companyId Int?
  activeStatus Boolean   @default(true)
  createdDate  String?
  createdTime  String?
  createdBy    Int?
  createdAt    DateTime  @default(now())
  updatedDate  String?
  updatedTime  String?
  updatedAt    DateTime?
}

model Test {
  id          Int     @id @default(autoincrement())
  name        String?
  descriptoin String?
}

model AllModule {
  id           Int       @id @default(autoincrement())
  moduleName   String
  moduleDes    String?
  moduleLogo   String?
  serialNo     Int?
  orgId        Int?
  activeStatus Boolean   @default(true)
  createdDate  String?
  createdTime  String?
  createdBy    Int?
  createdAt    DateTime  @default(now())
  updatedDate  String?
  updatedTime  String?
  updatedAt    DateTime?
  updatedBy    Int?
}

model ModuleLink {
  id                  Int       @id @default(autoincrement())
  moduleId            Int
  linkeNameMenuName   String
  menuOrSubmenuStatus Int //1 for menue 2 for submenu
  serialNo            Int?
  activeStatus        Boolean   @default(true)
  createdDate         String?
  createdTime         String?
  createdBy           Int?
  createdAt           DateTime  @default(now())
  updatedDate         String?
  updatedTime         String?
  updatedAt           DateTime?
  updatedBy           Int?
}

model ModuleLinkAssign {
  id               Int       @id @default(autoincrement())
  moduleId         Int
  moduleLinkId     Int
  userLabel        Int
  permissionStatus Boolean //See menu link or not
  activeStatus     Boolean   @default(true)
  createdDate      String?
  createdTime      String?
  createdBy        Int?
  createdAt        DateTime  @default(now())
  updatedDate      String?
  updatedTime      String?
  updatedAt        DateTime?
  updatedBy        Int?
}

model EmployeeInfo {
  id                    Int           @id @default(autoincrement())
  firstName             String?
  middleName            String
  lastName              String
  fullName              String
  phone                 String?
  mobileOne             String?
  mobileTwo             String?
  emergencyMobile       String?
  officeEmail           String?
  personalEmail         String?
  empImage              String?
  empSignature          String?
  nationalId            Int?
  department            Department?   @relation(fields: [departmentId], references: [id])
  departmentId                Int?
  designation           Designation?  @relation(fields: [designationId], references: [id])
  designationId         Int?
  employeeType EmployeeType? @relation(fields: [empType], references: [id])
  empType Int? // permanent, trainee, casual etc
  leaveApplicableStatus Boolean?
  dateOfBirts           String?
  gender Gender? @relation(fields: [genderId], references: [id])
  genderId             Int?
  religion Religion? @relation(fields: [religionId], references: [id])
  religionId              Int?
  bloodgroup Bloodgroup? @relation(fields: [bloodGroupId], references: [id])
  bloodGroupId Int?
  maritialStatus        Boolean?
  spousName             String?
  spouseProfe           Int? //spouse profession
  fatherOrHusbandName   String?
  fatherOrHusbandProfe  Int?
  fatherOrHusbandMobile String?
  motherName            String?
  motherProfe           Int?
  motherMobile          String?
  //start present address information
  division Division? @relation(fields: [presentDiviId], references: [id])
  presentDiviId           Int? //present divisition
  district District? @relation(fields: [presentDistId], references: [id])
  presentDistId            Int? //present district
  thana Thana? @relation(fields: [presentPSId], references: [id])
  presentPSId             Int? //present police station
  presentCityCor        Int? // present city corporation
  presentWord           Int? //present word
  presentWordNo         Int? //present word no
  presentVillRoad       Int? //present village or road
  presentBasHolding     Int?
  presentPostOffice     Int?
  presentPostOfficeCode Int?
  //start permanent address information
  // division Division? @relation(fields: [perDiviId], references: [id])
  perDiviId               Int?
  pertDisId               Int?
  pertPSId                Int? //permanent police station
  perCityCor            Int? //permanent city corporation
  perWord               Int? //permenaent word
  perWordNo             Int? //permanent word no
  perVillRoad           Int? //permanent village road
  perBasHolding         Int? //permanent basha holdings
  perPostOffice         Int?
  perPostOfficeCode     Int?
  activeStatus          Boolean       @default(true)
  createdDate           String?
  createdTime           String?
  createdBy             Int?
  createdAt             DateTime      @default(now())
  updatedDate           String?
  updatedTime           String?
  updatedAt             DateTime?
  updatedBy             Int?
  employeeEdu           EmployeeEdu[]
  leaveParent           LeaveParent[]
  movement              Movement[]
  attendance            Attendance[]
}

model EmployeeEdu {
  id               Int           @id @default(autoincrement())
  employeeInfo     EmployeeInfo? @relation(fields: [empId], references: [id])
  empId            Int?
  degreeId         Int?
  boardId          Int?
  resultType       Int? //GPA or Division
  resultGPA        String?
  resultDivision   String?
  certificateImage String?
  activeStatus     Boolean       @default(true)
  createdDate      String?
  createdTime      String?
  createdBy        Int?
  createdAt        DateTime      @default(now())
  updatedDate      String?
  updatedTime      String?
  updatedAt        DateTime?
  updatedBy        Int?
}

model EmployeeType {
  id             Int            @id @default(autoincrement())
  empTypeName String
  empTypeDes  String?
  orgId          Int?
  serialNo       Int?
  activeStatus   Boolean        @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime       @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  employeeInfo   EmployeeInfo[]
}

model Department {
  id             Int            @id @default(autoincrement())
  departmentName String
  departmentDes  String?
  orgId          Int?
  serialNo       Int?
  activeStatus   Boolean        @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime       @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  employeeInfo   EmployeeInfo[]
}

model Gender {
  id             Int            @id @default(autoincrement())
  genderName String
  genderDes  String?
  orgId          Int?
  serialNo       Int?
  activeStatus   Boolean        @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime       @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  employeeInfo   EmployeeInfo[]
}

model Religion {
  id             Int            @id @default(autoincrement())
  religionName String
  religionDes  String?
  orgId          Int?
  serialNo       Int?
  activeStatus   Boolean        @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime       @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  employeeInfo   EmployeeInfo[]
}

model Bloodgroup {
  id             Int            @id @default(autoincrement())
  bloodGroupName String
  bloodGroupDes  String?
  orgId          Int?
  serialNo       Int?
  activeStatus   Boolean        @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime       @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  employeeInfo   EmployeeInfo[]
}

model Division {
  id             Int            @id @default(autoincrement())
  divisionName String
  divisionDes  String?
  orgId          Int?
  serialNo       Int?
  activeStatus   Boolean        @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime       @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  employeeInfo   EmployeeInfo[]
}

model District {
  id             Int            @id @default(autoincrement())
  districtName String
  districtDes  String?
  orgId          Int?
  serialNo       Int?
  activeStatus   Boolean        @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime       @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  employeeInfo   EmployeeInfo[]
}

model Thana {
  id             Int            @id @default(autoincrement())
  thanaName String
  thanaDes  String?
  orgId          Int?
  serialNo       Int?
  activeStatus   Boolean        @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime       @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  employeeInfo   EmployeeInfo[]
}
model Designation {
  id              Int            @id @default(autoincrement())
  designationName String
  designationDes  String?
  orgId           Int?
  serialNo        Int?
  activeStatus    Boolean        @default(true)
  createdDate     String?
  createdTime     String?
  createdBy       Int?
  createdAt       DateTime       @default(now())
  updatedDate     String?
  updatedTime     String?
  updatedAt       DateTime?
  updatedBy       Int?
  employeeInfo    EmployeeInfo[]
}

model LeaveParent {
  id               Int           @id @default(autoincrement())
  employeeInfo     EmployeeInfo? @relation(fields: [empId], references: [id])
  empId            Int?
  leaveStatus      Int? // full day leave 1 short leave 2
  leaveReasons     String?
  leaveDes         String?
  attachments      String?
  leaveLocation    String?
  emergencyContact String?
  leaveFromDate DateTime?    @db.Date
  leaveToDate   DateTime?    @db.Date
  orgId            Int?
  activeStatus     Boolean       @default(true)
  createdDate      String?
  createdTime      String?
  createdBy        Int?
  createdAt        DateTime      @default(now())
  updatedDate      String?
  updatedTime      String?
  updatedAt        DateTime?
  updatedBy        Int?
  leaveChild       LeaveChild[]
}

model LeaveChild {
  id            Int          @id @default(autoincrement())
  leaveParent   LeaveParent? @relation(fields: [leaveId], references: [id])
  leaveId       Int?
  leaveDate DateTime?    @db.Date
  leaveFromTime String?
  leaveToTime   String?
  activeStatus  Boolean      @default(true)
  createdDate   String?
  createdTime   String?
  createdBy     Int?
  createdAt     DateTime     @default(now())
  updatedDate   String?
  updatedTime   String?
  updatedAt     DateTime?
  updatedBy     Int?
}

model Movement {
  id               Int           @id @default(autoincrement())
  employeeInfo     EmployeeInfo? @relation(fields: [empId], references: [id])
  empId            Int?
  clientId         Int?
  projectId        Int?
  movementStatus   Int? // from office 1 from home 2
  movementReasons  String?
  movementDes      String?
  movementFromDate String?
  movementToDate   String?
  movementFromTime String?
  movementToTime   String?
  emergencyContact String?
  orgId            Int?
  activeStatus     Boolean       @default(true)
  createdDate      String?
  createdTime      String?
  createdBy        Int?
  createdAt        DateTime      @default(now())
  updatedDate      String?
  updatedTime      String?
  updatedAt        DateTime?
  updatedBy        Int?
}

model Attendance {
  id             Int           @id @default(autoincrement())
  employeeInfo   EmployeeInfo? @relation(fields: [empId], references: [id])
  empId          Int?
  attendanceDate String?
  logInTime      String?
  logOutTime     String?
  biometricId    Int?
  machineId      Int?
  shiftId        Int?
  orgId          Int?
  activeStatus   Boolean       @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime      @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
}


model Holidays {
  id             Int           @id @default(autoincrement())
  holidayTitle String?
  hlidayDescription String?
  date String?
  orgId          Int?
  activeStatus   Boolean       @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime      @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
}


model Country {
  id             Int           @id @default(autoincrement())
  countryName String?
  countryDescription String?
  countryCode Int?
  activeStatus   Boolean       @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime      @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  invSupplier InvSupplier[]
}

model InvSupplier {
  id             Int           @id @default(autoincrement())
  supplierName String?
  supplierDescription String?
  country Country? @relation(fields: [countryId], references: [id])
  countryId Int?
  orgId          Int?
  activeStatus   Boolean       @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime      @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  invItemSetup InvItemSetup []
}

model InvItemsGroup {
  id             Int           @id @default(autoincrement())
  udId Int?
  groupName String?
  groupDescription String?
  remarks String?
  orgId          Int?
  activeStatus   Boolean       @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime      @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  invItemSetup InvItemSetup[]
  requisitionChild RequisitionChild[]
}

model Measurement {
  id             Int           @id @default(autoincrement())
  measurementName String
  measurementDescription String?
  remarks String?
  orgId          Int?
  activeStatus   Boolean       @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime      @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  invItemSetup InvItemSetup[]
  requisitionChild RequisitionChild[]
}

model InvItemSetup {
  id             Int           @id @default(autoincrement())
  udId Int?
  itemCode String?
  modelNo String?
  InvItemsGroup InvItemsGroup? @relation(fields: [itemGroupId], references: [id])
  itemGroupId Int?
  itemName String
  itemDescription String?
  Measurement Measurement? @relation(fields: [measurementtId], references: [id])
  measurementtId Int?
  costPrice Float?
  salePrice Float?
  manufactureDate DateTime?
  expireDate DateTime?
  taxRate Float?
  reorderLabel Int?
  invSupplier InvSupplier? @relation(fields: [supplierId], references: [id])
  supplierId Int?
  itemImage String?
  remarks String?
  orgId          Int?
  activeStatus   Boolean       @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime      @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  requisitionChild RequisitionChild[]
}


model RequisitionParent {
  id             Int           @id @default(autoincrement())
  requisitionNo String
  requisitionType Int? //1 for internal, 2 for external
  requisitionFrom Int?
  requisitionTo Int?
  itemGroupId Int?
  itemId Int?
  requisitionDate DateTime
  requisitionStatus Int @default(0) // 0 form requisition pending 1 form approve 2 for cancel
  requisitionRemarks String
  requisitionAppCanRemarks String // requisition approved or cancel satus
  requisitionBy Int?
  orgId          Int?
  activeStatus   Boolean       @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime      @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  requisitionChild RequisitionChild[]
}


model RequisitionChild {
  id             Int           @id @default(autoincrement())
  requisitionParent RequisitionParent? @relation(fields: [requisitionId], references: [id])
  requisitionId Int?
  invItemsGroup InvItemsGroup? @relation(fields: [itemGroupId], references: [id])
  itemGroupId Int?
  invItemSetup InvItemSetup? @relation(fields: [itemId], references: [id])
  itemId Int?
  measurement Measurement? @relation(fields: [uomId], references: [id])
  uomId Int?
  qty Int
  price Int?
  orgId          Int?
  activeStatus   Boolean       @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime      @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
}