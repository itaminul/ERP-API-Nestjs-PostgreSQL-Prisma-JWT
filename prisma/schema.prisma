generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  password     String
  mobileNumber String?
  emailAddress String?
  deptId       Int?
  desigId      Int?
  roleId       Int?
  orgId        Int?
  activeStatus Boolean   @default(true)
  createdDate  String?
  createdTime  String?
  createdBy    Int?
  createdAt    DateTime  @default(now())
  updatedDate  String?
  updatedTime  String?
  updatedAt    DateTime?
  companyId    Int?
}

model Test {
  id          Int     @id @default(autoincrement())
  name        String?
  descriptoin String?
}

model AllModule {
  id           Int       @id @default(autoincrement())
  moduleName   String
  moduleDes    String?
  moduleLogo   String?
  orgId        Int?
  activeStatus Boolean   @default(true)
  createdDate  String?
  createdTime  String?
  createdBy    Int?
  createdAt    DateTime  @default(now())
  updatedDate  String?
  updatedTime  String?
  updatedAt    DateTime?
  updatedBy    Int?
  serialNo     Int?
}

model ModuleLink {
  id                  Int       @id @default(autoincrement())
  moduleId            Int
  linkeNameMenuName   String
  menuOrSubmenuStatus Int
  serialNo            Int?
  activeStatus        Boolean   @default(true)
  createdDate         String?
  createdTime         String?
  createdBy           Int?
  createdAt           DateTime  @default(now())
  updatedDate         String?
  updatedTime         String?
  updatedAt           DateTime?
  updatedBy           Int?
}

model ModuleLinkAssign {
  id               Int       @id @default(autoincrement())
  moduleId         Int
  moduleLinkId     Int
  userLabel        Int
  activeStatus     Boolean   @default(true)
  createdDate      String?
  createdTime      String?
  createdBy        Int?
  createdAt        DateTime  @default(now())
  updatedDate      String?
  updatedTime      String?
  updatedAt        DateTime?
  updatedBy        Int?
  permissionStatus Boolean
}

model EmployeeInfo {
  id                       Int                        @id @default(autoincrement())
  firstName                String?
  middleName               String
  lastName                 String
  fullName                 String
  phone                    String?
  mobileOne                String?
  mobileTwo                String?
  emergencyMobile          String?
  officeEmail              String?
  personalEmail            String?
  empImage                 String?
  empSignature             String?
  designationId            Int?
  dateOfBirts              String?
  maritialStatus           Boolean?
  spousName                String?
  spouseProfe              Int?
  fatherOrHusbandName      String?
  fatherOrHusbandProfe     Int?
  fatherOrHusbandMobile    String?
  motherName               String?
  motherProfe              Int?
  motherMobile             String?
  activeStatus             Boolean                    @default(true)
  createdDate              String?
  createdTime              String?
  createdBy                Int?
  createdAt                DateTime                   @default(now())
  updatedDate              String?
  updatedTime              String?
  updatedAt                DateTime?
  updatedBy                Int?
  nationalId               Int?
  empType                  Int?
  leaveApplicableStatus    Boolean?
  bloodGroupId             Int?
  genderId                 Int?
  religionId               Int?
  departmentId             Int?
  attendance               Attendance[]
  employeeEdu              EmployeeEdu[]
  bloodgroup               Bloodgroup?                @relation(fields: [bloodGroupId], references: [id])
  department               Department?                @relation(fields: [departmentId], references: [id])
  designation              Designation?               @relation(fields: [designationId], references: [id])
  employeeType             EmployeeType?              @relation(fields: [empType], references: [id])
  gender                   Gender?                    @relation(fields: [genderId], references: [id])
  religion                 Religion?                  @relation(fields: [religionId], references: [id])
  employeePermanentAddress EmployeePermanentAddress[]
  employeePresentAddress   EmployeePresentAddress[]
  leaveParent              LeaveParent[]
  movement                 Movement[]
}

model EmployeePresentAddress {
  id                    Int           @id @default(autoincrement())
  presentDiviId         Int?
  presentDistId         Int?
  presentPSId           Int?
  presentCityCor        Int?
  presentWord           Int?
  presentWordNo         Int?
  presentVillRoad       Int?
  presentBasHolding     Int?
  presentPostOffice     Int?
  presentPostOfficeCode Int?
  activeStatus          Boolean       @default(true)
  createdDate           String?
  createdTime           String?
  createdBy             Int?
  createdAt             DateTime      @default(now())
  updatedDate           String?
  updatedTime           String?
  updatedAt             DateTime?
  updatedBy             Int?
  empId                 Int?
  employeeInfo          EmployeeInfo? @relation(fields: [empId], references: [id])
  district              District?     @relation(fields: [presentDistId], references: [id])
  division              Division?     @relation(fields: [presentDiviId], references: [id])
  thana                 Thana?        @relation(fields: [presentPSId], references: [id])
}

model EmployeePermanentAddress {
  id                Int           @id @default(autoincrement())
  perDiviId         Int?
  pertDisId         Int?
  pertPSId          Int?
  perCityCor        Int?
  perWord           Int?
  perWordNo         Int?
  perVillRoad       Int?
  perBasHolding     Int?
  perPostOffice     Int?
  perPostOfficeCode Int?
  activeStatus      Boolean       @default(true)
  createdDate       String?
  createdTime       String?
  createdBy         Int?
  createdAt         DateTime      @default(now())
  updatedDate       String?
  updatedTime       String?
  updatedAt         DateTime?
  updatedBy         Int?
  empId             Int?
  employeeInfo      EmployeeInfo? @relation(fields: [empId], references: [id])
  division          Division?     @relation(fields: [perDiviId], references: [id])
  district          District?     @relation(fields: [pertDisId], references: [id])
  thana             Thana?        @relation(fields: [pertPSId], references: [id])
}

model EmployeeEdu {
  id               Int           @id @default(autoincrement())
  empId            Int?
  degreeId         Int?
  boardId          Int?
  resultType       Int?
  resultGPA        String?
  resultDivision   String?
  certificateImage String?
  activeStatus     Boolean       @default(true)
  createdDate      String?
  createdTime      String?
  createdBy        Int?
  createdAt        DateTime      @default(now())
  updatedDate      String?
  updatedTime      String?
  updatedAt        DateTime?
  updatedBy        Int?
  employeeInfo     EmployeeInfo? @relation(fields: [empId], references: [id])
}

model EmployeeType {
  id           Int            @id @default(autoincrement())
  empTypeName  String
  empTypeDes   String?
  orgId        Int?
  serialNo     Int?
  activeStatus Boolean        @default(true)
  createdDate  String?
  createdTime  String?
  createdBy    Int?
  createdAt    DateTime       @default(now())
  updatedDate  String?
  updatedTime  String?
  updatedAt    DateTime?
  updatedBy    Int?
  employeeInfo EmployeeInfo[]
}

model Department {
  id             Int            @id @default(autoincrement())
  departmentName String
  departmentDes  String?
  orgId          Int?
  serialNo       Int?
  activeStatus   Boolean        @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime       @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  employeeInfo   EmployeeInfo[]
}

model Gender {
  id           Int            @id @default(autoincrement())
  genderName   String
  genderDes    String?
  orgId        Int?
  serialNo     Int?
  activeStatus Boolean        @default(true)
  createdDate  String?
  createdTime  String?
  createdBy    Int?
  createdAt    DateTime       @default(now())
  updatedDate  String?
  updatedTime  String?
  updatedAt    DateTime?
  updatedBy    Int?
  employeeInfo EmployeeInfo[]
}

model Religion {
  id           Int            @id @default(autoincrement())
  religionName String
  religionDes  String?
  orgId        Int?
  serialNo     Int?
  activeStatus Boolean        @default(true)
  createdDate  String?
  createdTime  String?
  createdBy    Int?
  createdAt    DateTime       @default(now())
  updatedDate  String?
  updatedTime  String?
  updatedAt    DateTime?
  updatedBy    Int?
  employeeInfo EmployeeInfo[]
}

model Bloodgroup {
  id             Int            @id @default(autoincrement())
  bloodGroupName String
  bloodGroupDes  String?
  orgId          Int?
  serialNo       Int?
  activeStatus   Boolean        @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime       @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  employeeInfo   EmployeeInfo[]
}

model Division {
  id                       Int                        @id @default(autoincrement())
  divisionName             String
  divisionDes              String?
  orgId                    Int?
  serialNo                 Int?
  activeStatus             Boolean                    @default(true)
  createdDate              String?
  createdTime              String?
  createdBy                Int?
  createdAt                DateTime                   @default(now())
  updatedDate              String?
  updatedTime              String?
  updatedAt                DateTime?
  updatedBy                Int?
  employeePermanentAddress EmployeePermanentAddress[]
  employeePresentAddress   EmployeePresentAddress[]
}

model District {
  id                       Int                        @id @default(autoincrement())
  districtName             String
  districtDes              String?
  orgId                    Int?
  serialNo                 Int?
  activeStatus             Boolean                    @default(true)
  createdDate              String?
  createdTime              String?
  createdBy                Int?
  createdAt                DateTime                   @default(now())
  updatedDate              String?
  updatedTime              String?
  updatedAt                DateTime?
  updatedBy                Int?
  employeePermanentAddress EmployeePermanentAddress[]
  employeePresentAddress   EmployeePresentAddress[]
}

model Thana {
  id                       Int                        @id @default(autoincrement())
  thanaName                String
  orgId                    Int?
  serialNo                 Int?
  activeStatus             Boolean                    @default(true)
  createdDate              String?
  createdTime              String?
  createdBy                Int?
  createdAt                DateTime                   @default(now())
  updatedDate              String?
  updatedTime              String?
  updatedAt                DateTime?
  updatedBy                Int?
  thanaDes                 String?
  employeePermanentAddress EmployeePermanentAddress[]
  employeePresentAddress   EmployeePresentAddress[]
}

model Designation {
  id              Int            @id @default(autoincrement())
  designationName String
  designationDes  String?
  orgId           Int?
  serialNo        Int?
  activeStatus    Boolean        @default(true)
  createdDate     String?
  createdTime     String?
  createdBy       Int?
  createdAt       DateTime       @default(now())
  updatedDate     String?
  updatedTime     String?
  updatedAt       DateTime?
  updatedBy       Int?
  employeeInfo    EmployeeInfo[]
}

model LeaveParent {
  id               Int           @id @default(autoincrement())
  empId            Int?
  leaveStatus      Int?
  leaveReasons     String?
  leaveDes         String?
  attachments      String?
  leaveLocation    String?
  emergencyContact String?
  orgId            Int?
  activeStatus     Boolean       @default(true)
  createdDate      String?
  createdTime      String?
  createdBy        Int?
  createdAt        DateTime      @default(now())
  updatedDate      String?
  updatedTime      String?
  updatedAt        DateTime?
  updatedBy        Int?
  leaveFromDate    DateTime?     @db.Date
  leaveToDate      DateTime?     @db.Date
  leaveChild       LeaveChild[]
  employeeInfo     EmployeeInfo? @relation(fields: [empId], references: [id])
}

model LeaveChild {
  id            Int          @id @default(autoincrement())
  leaveId       Int?
  activeStatus  Boolean      @default(true)
  createdDate   String?
  createdTime   String?
  createdBy     Int?
  createdAt     DateTime     @default(now())
  updatedDate   String?
  updatedTime   String?
  updatedAt     DateTime?
  updatedBy     Int?
  leaveFromTime String?
  leaveToTime   String?
  leaveDate     DateTime?    @db.Date
  leaveParent   LeaveParent? @relation(fields: [leaveId], references: [id])
}

model Movement {
  id               Int           @id @default(autoincrement())
  empId            Int?
  clientId         Int?
  projectId        Int?
  movementStatus   Int?
  movementReasons  String?
  movementDes      String?
  movementFromDate String?
  movementToDate   String?
  movementFromTime String?
  movementToTime   String?
  emergencyContact String?
  orgId            Int?
  activeStatus     Boolean       @default(true)
  createdDate      String?
  createdTime      String?
  createdBy        Int?
  createdAt        DateTime      @default(now())
  updatedDate      String?
  updatedTime      String?
  updatedAt        DateTime?
  updatedBy        Int?
  employeeInfo     EmployeeInfo? @relation(fields: [empId], references: [id])
}

model Attendance {
  id             Int           @id @default(autoincrement())
  empId          Int?
  attendanceDate String?
  logInTime      String?
  logOutTime     String?
  biometricId    Int?
  orgId          Int?
  activeStatus   Boolean       @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime      @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
  machineId      Int?
  shiftId        Int?
  employeeInfo   EmployeeInfo? @relation(fields: [empId], references: [id])
}

model Holidays {
  id                Int       @id @default(autoincrement())
  holidayTitle      String?
  hlidayDescription String?
  date              String?
  orgId             Int?
  activeStatus      Boolean   @default(true)
  createdDate       String?
  createdTime       String?
  createdBy         Int?
  createdAt         DateTime  @default(now())
  updatedDate       String?
  updatedTime       String?
  updatedAt         DateTime?
  updatedBy         Int?
}

model Country {
  id                 Int           @id @default(autoincrement())
  countryName        String?
  countryDescription String?
  countryCode        Int?
  activeStatus       Boolean       @default(true)
  createdDate        String?
  createdTime        String?
  createdBy          Int?
  createdAt          DateTime      @default(now())
  updatedDate        String?
  updatedTime        String?
  updatedAt          DateTime?
  updatedBy          Int?
  invSupplier        InvSupplier[]
}

model InvSupplier {
  id                  Int            @id @default(autoincrement())
  supplierName        String?
  supplierDescription String?
  orgId               Int?
  activeStatus        Boolean        @default(true)
  createdDate         String?
  createdTime         String?
  createdBy           Int?
  createdAt           DateTime       @default(now())
  updatedDate         String?
  updatedTime         String?
  updatedAt           DateTime?
  updatedBy           Int?
  countryId           Int?
  invItemSetup        InvItemSetup[]
  country             Country?       @relation(fields: [countryId], references: [id])
}

model InvItemsGroup {
  id                      Int                       @id @default(autoincrement())
  udId                    Int?
  groupName               String?
  groupDescription        String?
  remarks                 String?
  orgId                   Int?
  activeStatus            Boolean                   @default(true)
  createdDate             String?
  createdTime             String?
  createdBy               Int?
  createdAt               DateTime                  @default(now())
  updatedDate             String?
  updatedTime             String?
  updatedAt               DateTime?
  updatedBy               Int?
  invItemSetup            InvItemSetup[]
  requisitionApproveChild RequisitionApproveChild[]
  requisitionChild        RequisitionChild[]
}

model Measurement {
  id                      Int                       @id @default(autoincrement())
  measurementName         String
  measurementDescription  String?
  remarks                 String?
  orgId                   Int?
  activeStatus            Boolean                   @default(true)
  createdDate             String?
  createdTime             String?
  createdBy               Int?
  createdAt               DateTime                  @default(now())
  updatedDate             String?
  updatedTime             String?
  updatedAt               DateTime?
  updatedBy               Int?
  invItemSetup            InvItemSetup[]
  requisitionApproveChild RequisitionApproveChild[]
  requisitionChild        RequisitionChild[]
}

model InvItemSetup {
  id                      Int                       @id @default(autoincrement())
  udId                    Int?
  itemCode                String?
  modelNo                 String?
  itemGroupId             Int?
  itemName                String
  itemDescription         String?
  measurementtId          Int?
  costPrice               Float?
  salePrice               Float?
  manufactureDate         DateTime?
  expireDate              DateTime?
  taxRate                 Float?
  reorderLabel            Int?
  supplierId              Int?
  itemImage               String?
  remarks                 String?
  orgId                   Int?
  activeStatus            Boolean                   @default(true)
  createdDate             String?
  createdTime             String?
  createdBy               Int?
  createdAt               DateTime                  @default(now())
  updatedDate             String?
  updatedTime             String?
  updatedAt               DateTime?
  updatedBy               Int?
  InvItemsGroup           InvItemsGroup?            @relation(fields: [itemGroupId], references: [id])
  Measurement             Measurement?              @relation(fields: [measurementtId], references: [id])
  invSupplier             InvSupplier?              @relation(fields: [supplierId], references: [id])
  requisitionApproveChild RequisitionApproveChild[]
  requisitionChild        RequisitionChild[]
}

model RequisitionParent {
  id                       Int                       @id @default(autoincrement())
  requisitionNo            String
  requisitionType          Int?
  requisitionFrom          Int?
  requisitionTo            Int?
  itemGroupId              Int?
  itemId                   Int?
  requisitionDate          DateTime
  requisitionStatus        Int                       @default(0)
  requisitionRemarks       String
  requisitionAppCanRemarks String
  requisitionBy            Int?
  orgId                    Int?
  activeStatus             Boolean                   @default(true)
  createdDate              String?
  createdTime              String?
  createdBy                Int?
  createdAt                DateTime                  @default(now())
  updatedDate              String?
  updatedTime              String?
  updatedAt                DateTime?
  updatedBy                Int?
  requisitionApproveChild  RequisitionApproveChild[]
  requisitionChild         RequisitionChild[]
}

model RequisitionChild {
  id                Int                @id @default(autoincrement())
  requisitionId     Int?
  itemGroupId       Int?
  itemId            Int?
  uomId             Int?
  qty               Int
  price             Int?
  orgId             Int?
  activeStatus      Boolean            @default(true)
  createdDate       String?
  createdTime       String?
  createdBy         Int?
  createdAt         DateTime           @default(now())
  updatedDate       String?
  updatedTime       String?
  updatedAt         DateTime?
  updatedBy         Int?
  invItemsGroup     InvItemsGroup?     @relation(fields: [itemGroupId], references: [id])
  invItemSetup      InvItemSetup?      @relation(fields: [itemId], references: [id])
  requisitionParent RequisitionParent? @relation(fields: [requisitionId], references: [id])
  measurement       Measurement?       @relation(fields: [uomId], references: [id])
}

model RequisitionApproveParent {
  id                      Int                       @id @default(autoincrement())
  requisitionNo           String
  requisitionType         Int?
  requisitionFrom         Int?
  requisitionTo           Int?
  itemGroupId             Int?
  itemId                  Int?
  requisitionDate         DateTime
  requisitionStatus       Int                       @default(0)
  requisitionRemarks      String
  requisitionBy           Int?
  orgId                   Int?
  activeStatus            Boolean                   @default(true)
  createdDate             String?
  createdTime             String?
  createdBy               Int?
  createdAt               DateTime                  @default(now())
  updatedDate             String?
  updatedTime             String?
  updatedAt               DateTime?
  updatedBy               Int?
  requisitionApproveChild RequisitionApproveChild[]
}

model RequisitionApproveChild {
  id                       Int                       @id @default(autoincrement())
  requisitionApproveId     Int?
  requisitionId            Int?
  itemGroupId              Int?
  itemId                   Int?
  uomId                    Int?
  approvedQty              Int?
  receivedQty              Int?
  price                    Int?
  orgId                    Int?
  activeStatus             Boolean                   @default(true)
  createdDate              String?
  createdTime              String?
  createdBy                Int?
  createdAt                DateTime                  @default(now())
  updatedDate              String?
  updatedTime              String?
  updatedAt                DateTime?
  updatedBy                Int?
  invItemsGroup            InvItemsGroup?            @relation(fields: [itemGroupId], references: [id])
  invItemSetup             InvItemSetup?             @relation(fields: [itemId], references: [id])
  requisitionApproveParent RequisitionApproveParent? @relation(fields: [requisitionApproveId], references: [id])
  requisitionParent        RequisitionParent?        @relation(fields: [requisitionId], references: [id])
  measurement              Measurement?              @relation(fields: [uomId], references: [id])
}

model Organization {
  id             Int       @id @default(autoincrement())
  orgName        String
  orgDescription String?
  serialNo       Int?
  activeStatus   Boolean   @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime  @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
}
